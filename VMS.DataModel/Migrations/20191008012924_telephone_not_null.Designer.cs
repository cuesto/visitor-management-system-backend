// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VMS.DataModel.DAL;

namespace VMS.DataModel.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20191008012924_telephone_not_null")]
    partial class telephone_not_null
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VMS.DataModel.Entities.BlackList", b =>
                {
                    b.Property<int>("BlackListKey")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasMaxLength(250);

                    b.Property<DateTime?>("Created");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("EndDate");

                    b.Property<byte>("IsDeleted");

                    b.Property<DateTime?>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("TaxNumber")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("BlackListKey");

                    b.ToTable("BlackList");
                });

            modelBuilder.Entity("VMS.DataModel.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentKey")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte>("IsDeleted");

                    b.Property<DateTime?>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.HasKey("DepartmentKey");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("VMS.DataModel.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeKey")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Created");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<int>("DepartmentKey");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("EmployeeId")
                        .HasMaxLength(50);

                    b.Property<byte>("IsDeleted");

                    b.Property<string>("MobilePhone")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("OfficePhone")
                        .HasMaxLength(50);

                    b.Property<string>("OfficePhoneExt")
                        .HasMaxLength(50);

                    b.HasKey("EmployeeKey");

                    b.HasIndex("DepartmentKey");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("VMS.DataModel.Entities.EmployeeRequest", b =>
                {
                    b.Property<int>("EmployeeRequestKey")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .HasMaxLength(100);

                    b.Property<string>("Company")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Created");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<int>("EmployeeKey");

                    b.Property<DateTime>("EndDate");

                    b.Property<TimeSpan?>("EndTime")
                        .HasColumnType("time");

                    b.Property<byte>("IsDeleted");

                    b.Property<DateTime?>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<int>("PurposeKey");

                    b.Property<DateTime>("StartDate");

                    b.Property<TimeSpan?>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status");

                    b.Property<string>("TaxNumber")
                        .HasMaxLength(50);

                    b.Property<string>("VisitorEmail")
                        .HasMaxLength(50);

                    b.Property<string>("VisitorName")
                        .HasMaxLength(50);

                    b.Property<string>("VisitorPhone")
                        .HasMaxLength(50);

                    b.HasKey("EmployeeRequestKey");

                    b.HasIndex("EmployeeKey");

                    b.HasIndex("PurposeKey");

                    b.ToTable("EmployeeRequest");
                });

            modelBuilder.Entity("VMS.DataModel.Entities.Purpose", b =>
                {
                    b.Property<int>("PurposeKey")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte>("IsDeleted");

                    b.Property<DateTime?>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.HasKey("PurposeKey");

                    b.ToTable("Purpose");
                });

            modelBuilder.Entity("VMS.DataModel.Entities.Role", b =>
                {
                    b.Property<int>("RoleKey")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<byte>("IsDeleted");

                    b.Property<DateTime?>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("RoleKey");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("VMS.DataModel.Entities.User", b =>
                {
                    b.Property<int>("UserKey")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte>("IsDeleted");

                    b.Property<DateTime?>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("RoleKey");

                    b.Property<byte[]>("password_hash")
                        .IsRequired();

                    b.Property<byte[]>("password_salt")
                        .IsRequired();

                    b.HasKey("UserKey");

                    b.HasIndex("RoleKey");

                    b.ToTable("User");
                });

            modelBuilder.Entity("VMS.DataModel.Entities.Visitor", b =>
                {
                    b.Property<int>("VisitorKey")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasMaxLength(100);

                    b.Property<string>("Company")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Created");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<int>("EmployeeKey");

                    b.Property<int>("EmployeeRequestKey");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("Gender");

                    b.Property<string>("Image");

                    b.Property<byte>("IsDeleted");

                    b.Property<DateTime?>("Modified");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasMaxLength(50);

                    b.Property<int>("PurposeKey");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("Status");

                    b.Property<string>("TaxNumber")
                        .HasMaxLength(50);

                    b.Property<string>("TaxNumberVisitor")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("VisitorKey");

                    b.HasIndex("EmployeeKey");

                    b.HasIndex("PurposeKey");

                    b.ToTable("Visitor");
                });

            modelBuilder.Entity("VMS.DataModel.Entities.Employee", b =>
                {
                    b.HasOne("VMS.DataModel.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentKey")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VMS.DataModel.Entities.EmployeeRequest", b =>
                {
                    b.HasOne("VMS.DataModel.Entities.Employee", "Employee")
                        .WithMany("EmployeeRequests")
                        .HasForeignKey("EmployeeKey")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VMS.DataModel.Entities.Purpose", "Purpose")
                        .WithMany("EmployeeRequests")
                        .HasForeignKey("PurposeKey")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VMS.DataModel.Entities.User", b =>
                {
                    b.HasOne("VMS.DataModel.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleKey")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("VMS.DataModel.Entities.Visitor", b =>
                {
                    b.HasOne("VMS.DataModel.Entities.Employee", "Employee")
                        .WithMany("Visitors")
                        .HasForeignKey("EmployeeKey")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("VMS.DataModel.Entities.Purpose", "Purpose")
                        .WithMany("Visitors")
                        .HasForeignKey("PurposeKey")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
